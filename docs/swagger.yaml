swagger: "2.0"
info:
  title: Example API
  version: "1.0"
paths:
  /users:
    post:
      tags:
        - Users
      summary: Creates a user
      description: Creates a new user in the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: The user to create
          required: true
          schema:
            type: object
            properties:
              Username:
                type: string
      responses:
        "201":
          description: Successfully created user
          schema:
            $ref: "#/definitions/User"
        "400":
          description: Bad request if user data is invalid
          schema:
            type: object
            properties:
              error:
                type: string
        "500":
          description: Internal server error if the user cannot be created
          schema:
            type: object
            properties:
              error:
                type: string
  /categories:
    post:
      tags:
        - Categories
      summary: Creates a category
      description: Creates a new category in the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: category
          description: The category to create
          required: true
          schema:
            type: object
            properties:
              CategoryName:
                type: string
      responses:
        "201":
          description: Successfully created category
          schema:
            $ref: "#/definitions/Category"
        "400":
          description: Bad request if category data is invalid
          schema:
            type: object
            properties:
              error:
                type: string
        "500":
          description: Internal server error if the category cannot be created
          schema:
            type: object
            properties:
              error:
                type: string
    get:
      tags:
        - Categories
      summary: Lists all categories
      description: Retrieves a list of categories
      produces:
        - application/json
      responses:
        "200":
          description: A list of categories
          schema:
            type: array
            items:
              $ref: "#/definitions/Category"
        "500":
          description: Internal server error if the categories cannot be retrieved
          schema:
            type: object
            properties:
              error:
                type: string
  /questions:
    post:
      tags:
        - Questions
      summary: Creates a question
      description: Creates a new question in the system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: question
          description: The question to create
          required: true
          schema:
            type: object
            properties:
              UserID:
                type: integer
              CategoryID:
                type: integer
              QuestionTitle:
                type: string
              QuestionContent:
                type: string
      responses:
        "201":
          description: Successfully created question
          schema:
            $ref: "#/definitions/Question"
        "400":
          description: Bad request if question data is invalid
          schema:
            type: object
            properties:
              error:
                type: string
        "500":
          description: Internal server error if the question cannot be created
          schema:
            type: object
            properties:
              error:
                type: string
    get:
      tags:
        - Questions
      summary: Lists all questions
      description: Retrieves a list of questions
      produces:
        - application/json
      responses:
        "200":
          description: A list of questions
          schema:
            type: array
            items:
              $ref: "#/definitions/Question"
        "500":
          description: Internal server error if the questions cannot be retrieved
          schema:
            type: object
            properties:
              error:
                type: string
  /questions/{id}:
    get:
      tags:
        - Questions
      summary: Get a question
      description: Retrieves a specific question by ID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the question to retrieve
          type: integer
      responses:
        "200":
          description: A specific question
          schema:
            $ref: "#/definitions/Question"
        "404":
          description: Question not found
          schema:
            type: object
            properties:
              error:
                type: string
        "500":
          description: Internal server error if the question cannot be retrieved
          schema:
            type: object
            properties:
              error:
                type: string
definitions:
  BaseModel:
    type: object
    properties:
      ID:
        type: integer
      CreatedAt:
        type: string
        format: date-time
      UpdatedAt:
        type: string
        format: date-time
      DeletedAt:
        type: string
        format: date-time
        x-nullable: true
  User:
    type: object
    allOf:
      - $ref: "#/definitions/BaseModel"
      - type: object
        properties:
          Username:
            type: string
  Category:
    type: object
    allOf:
      - $ref: "#/definitions/BaseModel"
      - type: object
        properties:
          CategoryName:
            type: string
  Answer:
    type: object
    allOf:
      - $ref: "#/definitions/BaseModel"
      - type: object
        properties:
          UserID:
            type: integer
          QuestionID:
            type: integer
          AnswerContent:
            type: string
          User:
            $ref: "#/definitions/User"
          Question:
            $ref: "#/definitions/Question"
  Question:
    type: object
    allOf:
      - $ref: "#/definitions/BaseModel"
      - type: object
        properties:
          UserID:
            type: integer
          CategoryID:
            type: integer
          QuestionTitle:
            type: string
          QuestionContent:
            type: string
          User:
            $ref: "#/definitions/User"
          Category:
            $ref: "#/definitions/Category"
